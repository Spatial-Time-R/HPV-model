x =
################################################
## Generate figures from the raw data
################################################
#!/usr/bin/Rscript
library(ggplot2)
library(cowplot)
library(RSQLite)
library(reshape)
library(tidyr)
library(viridis)
library(polycor)
library(corrplot)
library(dplyr)
select <- dplyr::selec
setwd("~/Desktop/Github/HPV-model/Raw data analysis ")
summarize <- dplyr::summarise
rename <- dplyr::rename
source("plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
################################################
# Load in the data:
################################################
dbFilename <- "../Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
clearance_params <- dbReadTable(db, "infection_duration_parameters")
cov_data_v1 <- dbReadTable(db, "covariate_data_baseline_visit")
dbDisconnect(db)
HPV_types <- unique(inf_status$type)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
countries <- unique(inf_status$country)
visit_prev <- data.frame()
j = 1
for( j in 1:length(countries)){
this_country <- countries[j]
visit_prev_local <- data.frame()
for( i in 1:length(HPV_types)){
this_type <- HPV_types[i]
inf_df <- inf_status %>% filter(type == this_type & country == this_country) %>% select(-c(type,country))
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- c(as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T)))
visit_prev_local <- rbind(visit_prev_local,prev)
}
visit_prev_local$Type <- HPV_types
visit_prev_local$Country <- this_country
names(visit_prev_local) <- c(paste0("v", c(1:10)), "Type","Country")
visit_prev <- rbind(visit_prev,visit_prev_local)
}
names(visit_prev) <- c(paste0("v", c(1:10)), "Type","Country")
dfm <- melt(visit_prev, id.vars = c("Type","Country"))
names(dfm) <- c("Type","Country","Visit","Prev")
dfm$Type <- toupper(dfm$Type)
mean_prev_countries <- dfm %>%
group_by(Type,Country) %>%
summarize(mean = mean(Prev)) %>%
spread(Country,mean)
p1 <- ggplot(mean_prev_countries, aes(x = Mexico, y = USA)) + geom_point() + geom_abline(linetype = 2)
cor1 <- cor.test( ~ Mexico + USA,
data=mean_prev_countries,
method = "pearson",
continuity = FALSE,
conf.level = 0.95)
cor1
dAICc <- function(L1,L2, k1,k2,n){
delta = (2*k1 - 2*L1) - (2*k2 - 2*k1) + 2*k1*(k1+1)/(n-k1-1) -  2*k2*(k2+1)/(n-k2-1)
return(delta)
}
AIC <- function(L,k){
return(2*k-2*L)
}
rAIC <- function(AIC,k){
L = -AIC/2+k
return(L)
}
rAIC(2979.6,17)
