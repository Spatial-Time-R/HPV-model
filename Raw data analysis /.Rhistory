prev <- array(NA, length(st))
for( i in 2:length(st)){
dfm %>% filter(date > st[i-1] & date < st[i] & !is.na(status)) -> dfm_sub
prev[i] <- sum(dfm_sub$status)/nrow(dfm_sub)
}
prev <- prev[-1]
return(prev)
}
dbFilename <- ".././raw_data/HIMdata_Mar_2015.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infectionStatusByVisit")
visit_dates <- dbReadTable(db,"visitDates")
dbDisconnect(db)
model_types <- paste0("hpv",c(62,84,89,16,51,6))
HPV_types <- unique(inf_status$strainId)
n_test_strains <- length(HPV_types)
visit_prev <- data.frame()
strains <- HPV_types
for( i in 1:length(strains)){
this_strain <- strains[i]
inf_df <- inf_status[inf_status$strainId == this_strain,]
inf_df$strainId <- NULL
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$type[i] <- this_strain
}
names(visit_prev) <- c(paste0("v", c(1:10)), "type")
dfm <- melt(visit_prev, id.vars = "type")
names(dfm) <- c("type","visit","prev")
dfm$type <- toupper(dfm$type)
mean_prev_df <- dfm %>% group_by(type) %>% summarize(mean = mean(prev), sd = sd(prev))
plot_mean_prev <- ggplot(mean_prev_df, aes(x = reorder(type, -mean), y = mean)) +
plot_themes+
geom_point() +
geom_errorbar(aes(ymin = mean -sd, ymax = mean + sd)) +
ylab("Mean prevalence") + xlab("") +
ylim(0,.12) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
###############################################
db <- dbConnect(SQLite(), dbFilename)
visit_dates <- reshape(dbReadTable(db, "visitDates"), timevar= "visitId", idvar = "subjectId", direction = "wide")
dbDisconnect(db)
numeric_vis_dates <- data.frame(visit_dates$subjectId, apply(visit_dates[,2:11],2,get_numeric_dates))
names(numeric_vis_dates) <- c("subjectId",paste0("v",c(1:10)))
names(visit_dates) <- c("subjectId",paste0("v",c(1:10)))
dfm_dates <- melt(visit_dates, id.vars = "subjectId")
names(dfm_dates) <- c("subjectId", "visitId","date")
min_date <- min(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
max_date <- max(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
date_seq <- seq(to = max_date, from = min_date, by = .6*365)
df_all <- data.frame()
for ( i in 1:length(HPV_types)){
df <- data.frame(date = date_seq[-1],
Type =HPV_types[i],
prev = get_prev(HPV_types[i], date_seq)
)
df_all <- rbind(df_all,df)
}
df_all <- subset(df_all , df_all$Type %in% paste0("hpv",c(62,84,89,16,51,6)))
df_all$Type <- toupper(df_all$Type)
dates <- as.Date(unique(df_all$date), origin = '1970-1-1')
p <- ggplot(df_all, aes(x = as.Date(date, origin = '1970-1-1'), y = prev, group = Type)) + geom_line(aes(color = Type))
plot_prev <- p + xlab("") +  scale_color_viridis(discrete = TRUE, option = "magma", end = .8) + xlim(dates[1], dates[length(dates) -2 ]) +
scale_y_continuous(limits = c(0, 0.16), breaks = c(0, 0.02, 0.04, 0.06, 0.08,.1,.12,.14,.16)) +
#geom_dl(aes(label = toupper(type)), method = list(#dl.trans(x = x - .75),
#"last.points",
#cex = .75))  +#method = list("last.points",cex = .75)) +
plot_themes +
theme(axis.line.x = element_line(),
axis.line.y = element_line(),
#axis.text = element_text(size = 10, color = "black"),
# axis.title = element_text(size = 10, color = "black"),
axis.text.x = element_text(angle=45, vjust = 0.5),
legend.text = element_text(size = 7, color = "black"),
legend.title= element_blank(),
legend.position = c(.2,.82), legend.direction = "horizontal", legend.justification = "left") +
labs(x = "", y = "Prevalence")
plot_prev
dim(inf_status)
head(inf_status)
unique(inf_status$subjectId)
length(unique(inf_status$subjectId))
setwd("~/Desktop/CODE/raw_data")
################################################
## Generate figures from the raw data
################################################
library(tidyverse)
library(ggplot2)
library(cowplot)
library(RSQLite)
library(directlabels)
library(reshape)
library(tidyr)
library(viridis)
select <- dplyr::select
summarize <- dplyr::summarise
source(".././Figures/plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
################################################
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
dbDisconnect(db)
HPV_types <- unique(inf_status$strainId)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
n_test_strains <- length(HPV_types)
visit_prev <- data.frame()
strains <- HPV_types
for( i in 1:length(strains)){
this_strain <- strains[i]
inf_df <- inf_status[inf_status$strainId == this_strain,] %>% select(-country)
inf_df$strainId <- NULL
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$type[i] <- this_strain
}
names(visit_prev) <- c(paste0("v", c(1:10)), "type")
dfm <- melt(visit_prev, id.vars = "type")
names(dfm) <- c("type","visit","prev")
dfm$type <- toupper(dfm$type)
mean_prev_df <- dfm %>% group_by(type) %>% summarize(mean = mean(prev), sd = sd(prev))
plot_mean_prev <- ggplot(mean_prev_df, aes(x = reorder(type, -mean), y = mean)) +
plot_themes+
geom_point() +
geom_errorbar(aes(ymin = mean -sd, ymax = mean + sd)) +
ylab("Mean prevalence") + xlab("") +
ylim(0,.12) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
visit_dates <- reshape(visit_dates, timevar= "visitId", idvar = "subjectId", direction = "wide")
numeric_vis_dates <- data.frame(visit_dates$subjectId, apply(visit_dates[,2:11],2,get_numeric_dates))
names(numeric_vis_dates) <- c("subjectId",paste0("v",c(1:10)))
names(visit_dates) <- c("subjectId",paste0("v",c(1:10)))
dfm_dates <- melt(visit_dates, id.vars = "subjectId")
names(dfm_dates) <- c("subjectId", "visitId","date")
min_date <- min(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
max_date <- max(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
date_seq <- seq(to = max_date, from = min_date, by = .6*365)
df_all <- data.frame()
for ( i in 1:length(HPV_types)){
df <- data.frame(date = date_seq[-1],
Type =HPV_types[i],
prev = get_prev(HPV_types[i], date_seq)
)
df_all <- rbind(df_all,df)
}
df_all <- subset(df_all , df_all$Type %in% paste0("hpv",c(62,84,89,16,51,6)))
df_all$Type <- toupper(df_all$Type)
dates <- as.Date(unique(df_all$date), origin = '1970-1-1')
p <- ggplot(df_all, aes(x = as.Date(date, origin = '1970-1-1'), y = prev, group = Type)) + geom_line(aes(color = Type))
plot_prev <- p + xlab("") +  scale_color_viridis(discrete = TRUE, option = "magma", end = .8) + xlim(dates[1], dates[length(dates) -2 ]) +
scale_y_continuous(limits = c(0, 0.16), breaks = c(0, 0.02, 0.04, 0.06, 0.08,.1,.12,.14,.16)) +
#geom_dl(aes(label = toupper(type)), method = list(#dl.trans(x = x - .75),
#"last.points",
#cex = .75))  +#method = list("last.points",cex = .75)) +
plot_themes +
theme(axis.line.x = element_line(),
axis.line.y = element_line(),
#axis.text = element_text(size = 10, color = "black"),
# axis.title = element_text(size = 10, color = "black"),
axis.text.x = element_text(angle=45, vjust = 0.5),
legend.text = element_text(size = 7, color = "black"),
legend.title= element_blank(),
legend.position = c(.2,.82), legend.direction = "horizontal", legend.justification = "left") +
labs(x = "", y = "Prevalence")
plot_prev
################################################
## Generate figures from the raw data
################################################
library(tidyverse)
library(ggplot2)
library(cowplot)
library(RSQLite)
library(directlabels)
library(reshape)
library(tidyr)
library(viridis)
select <- dplyr::select
summarize <- dplyr::summarise
source(".././Figures/plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
################################################
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
dbDisconnect(db)
HPV_types <- unique(inf_status$strainId)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
n_test_strains <- length(HPV_types)
visit_prev <- data.frame()
strains <- HPV_types
for( i in 1:length(strains)){
this_strain <- strains[i]
inf_df <- inf_status[inf_status$strainId == this_strain,] %>% select(-country)
inf_df$strainId <- NULL
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$type[i] <- this_strain
}
names(visit_prev) <- c(paste0("v", c(1:10)), "type")
dfm <- melt(visit_prev, id.vars = "type")
names(dfm) <- c("type","visit","prev")
dfm$type <- toupper(dfm$type)
mean_prev_df <- dfm %>% group_by(type) %>% summarize(mean = mean(prev), sd = sd(prev))
plot_mean_prev <- ggplot(mean_prev_df, aes(x = reorder(type, -mean), y = mean)) +
plot_themes+
geom_point() +
geom_errorbar(aes(ymin = mean -sd, ymax = mean + sd)) +
ylab("Mean prevalence") + xlab("") +
ylim(0,.12) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
###############################################
visit_dates <- reshape(visit_dates, timevar= "visitId", idvar = "subjectId", direction = "wide")
numeric_vis_dates <- data.frame(visit_dates$subjectId, apply(visit_dates[,2:11],2,get_numeric_dates))
names(numeric_vis_dates) <- c("subjectId",paste0("v",c(1:10)))
names(visit_dates) <- c("subjectId",paste0("v",c(1:10)))
dfm_dates <- melt(visit_dates, id.vars = "subjectId")
names(dfm_dates) <- c("subjectId", "visitId","date")
min_date <- min(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
max_date <- max(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
date_seq <- seq(to = max_date, from = min_date, by = .6*365)
df_all <- data.frame()
for ( i in 1:length(HPV_types)){
df <- data.frame(date = date_seq[-1],
Type =HPV_types[i],
prev = get_prev(HPV_types[i], date_seq)
)
df_all <- rbind(df_all,df)
}
Model_types
df_all <- subset(df_all , df_all$Type %in% Model_types)#paste0("hpv",c(62,84,89,16,51,6)))
df_all$Type <- toupper(df_all$Type)
dates <- as.Date(unique(df_all$date), origin = '1970-1-1')
p <- ggplot(df_all, aes(x = as.Date(date, origin = '1970-1-1'), y = prev, group = Type)) + geom_line(aes(color = Type))
plot_prev <- p + xlab("") +  scale_color_viridis(discrete = TRUE, option = "magma", end = .8) + xlim(dates[1], dates[length(dates) -2 ]) +
scale_y_continuous(limits = c(0, 0.16), breaks = c(0, 0.02, 0.04, 0.06, 0.08,.1,.12,.14,.16)) +
#geom_dl(aes(label = toupper(type)), method = list(#dl.trans(x = x - .75),
#"last.points",
#cex = .75))  +#method = list("last.points",cex = .75)) +
plot_themes +
theme(axis.line.x = element_line(),
axis.line.y = element_line(),
#axis.text = element_text(size = 10, color = "black"),
# axis.title = element_text(size = 10, color = "black"),
axis.text.x = element_text(angle=45, vjust = 0.5),
legend.text = element_text(size = 7, color = "black"),
legend.title= element_blank(),
legend.position = c(.2,.82), legend.direction = "horizontal", legend.justification = "left") +
labs(x = "", y = "Prevalence")
plot_prev
save_plot("raw_data_prevalence.pdf",
plot_grid(plot_mean_prev, plot_prev, nrow=2 , align = "h", labels = c("A","B")),
base_aspect_ratio = .9
)
head(visit_prev)
head(mean_prev_df)
i = 1
visit_prev <- data.frame()
this_strain <- HPV_types[i]
inf_df <- inf_status[inf_status$strainId == this_strain,]
head(df)
################################################
## Generate figures from the raw data
################################################
library(tidyverse)
library(ggplot2)
library(cowplot)
library(RSQLite)
library(directlabels)
library(reshape)
library(tidyr)
library(viridis)
select <- dplyr::select
summarize <- dplyr::summarise
source(".././Figures/plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
################################################
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
dbDisconnect(db)
HPV_types <- unique(inf_status$strainId)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
n_test_strains <- length(HPV_types)
head(inf_status)
i = 1
this_strain <- HPV_types[i]
this_country = "USA"
this_type <- HPV_types[i]
inf_df <- inf_status %>% filter(strainId == this_type & country == this_country)
dim(inf_df)
inf_df <- inf_status %>% filter(strainId == this_type & country == this_country) %>% select(-c(strainId,country))
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$type[i] <- this_strain
visit_prev <- data.frame()
visit_prev <- rbind(visit_prev,prev)
visit_prev$type[i] <- this_strain
visit_prev
visit_prev <- data.frame()
this_type <- HPV_types[i]
inf_df <- inf_status %>% filter(strainId == this_type & country == this_country) %>% select(-c(strainId,country))
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$Type[i] <- this_strain
visit_prev$Country[i] <- this_country
visit_prev
unique(inf_df$country)
unique(inf_status$country)
###############################################
countries <- unique(inf_status$country)
countries <- unique(inf_status$country)
visit_prev <- data.frame()
for( i in 1:length(HPV_types)){
this_type <- HPV_types[i]
inf_df <- inf_status %>% filter(strainId == this_type & country == this_country) %>% select(-c(strainId,country))
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$Type[i] <- this_strain
visit_prev$Country[i] <- this_country
}
head(visit_prev)
names(visit_prev) <- c(paste0("v", c(1:10)), "Type","Country")
dfm <- melt(visit_prev, id.vars = c("Type","Country"))
head(df,)
head(dfm)
names(dfm) <- c("Type","Country","Visit","Prev")
dfm$type <- toupper(dfm$type)
names(visit_prev) <- c(paste0("v", c(1:10)), "Type","Country")
dfm <- melt(visit_prev, id.vars = c("Type","Country"))
names(dfm) <- c("Type","Country","Visit","Prev")
dfm$type <- toupper(dfm$Type)
mean_prev_df <- dfm %>% group_by(Type,Country) %>% summarize(mean = mean(prev), sd = sd(prev))
mean_prev_df
source('~/Desktop/CODE/raw_data/raw_data_figs.R')
setwd("~/Desktop/CODE/raw_data")
################################################
## Generate figures from the raw data
################################################
library(tidyverse)
library(ggplot2)
library(cowplot)
library(RSQLite)
library(directlabels)
library(reshape)
library(tidyr)
library(viridis)
select <- dplyr::select
summarize <- dplyr::summarise
source(".././Figures/plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
########################
# Load in the data:
################################################
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
dbDisconnect(db)
dbDisconnect(db)
HPV_types <- unique(inf_status$strainId)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
n_test_strains <- length(HPV_types)
HPV_types <- unique(inf_status$strainId)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
n_test_strains <- length(HPV_types)
360 + 240 + 50 + 90
################################################
library(tidyverse)
library(ggplot2)
library(cowplot)
library(RSQLite)
library(directlabels)
library(reshape)
library(tidyr)
library(viridis)
select <- dplyr::select
summarize <- dplyr::summarise
source(".././Figures/plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
names(inf_dates)
names(inf_status)
inf_status <- inf_status %>% rename(strainId = "Type")
inf_status <- inf_status %>% rename(strainId, "Type")
names(inf_status)
names(inf_stauts)[3] <- "type"
names(inf_status)[3] <- "type"
names(inf_status)
db <- dbConnect(SQLite(), dbFilename)
dim(inf_status)
dbWriteTable(db,"infection_status_complete", inf_status,overwrite=T)
dbDisconnect(db)
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
dbListTables(db)
tableNames <- dbListTables(db)
dbListTables(db)
################################################
## Generate figures from the raw data
################################################
library(tidyverse)
library(ggplot2)
library(cowplot)
library(RSQLite)
library(directlabels)
library(reshape)
library(tidyr)
library(viridis)
select <- dplyr::select
summarize <- dplyr::summarise
source(".././Figures/plot_themes.R")
source("./data_formatting/HIM_dataset_functions.R")
# Do you want to save the figures?
save_plots = 1
###################
################################################
# Load in the data:
################################################
dbFilename <- "../Analysis/inference/Data/Data.sqlite"
db <- dbConnect(SQLite(), dbFilename)
tableNames <- dbListTables(db)
inf_status <- dbReadTable(db,"infection_status_complete")
visit_dates <- dbReadTable(db,"visit_dates_complete")
dbDisconnect(db)
HPV_types <- unique(inf_status$type)
Model_types <- paste0("hpv",c(62,84,89,16,51,6))
visit_prev <- data.frame()
types <- HPV_types
for( i in 1:length(types)){
this_type <- types[i]
inf_df <- inf_status[inf_status$type == this_type,] %>% select(-country)
inf_df$type <- NULL
inf <- reshape(inf_df, idvar = "subjectId", timevar = "visitId", direction = "wide" )
prev <- as.numeric(colMeans(inf[names(inf)!="subjectId"], na.rm=T))
visit_prev <- rbind(visit_prev,prev)
visit_prev$type[i] <- this_type
}
names(visit_prev) <- c(paste0("v", c(1:10)), "type")
dfm <- melt(visit_prev, id.vars = "type")
names(dfm) <- c("type","visit","prev")
dfm$type <- toupper(dfm$type)
mean_prev_df <- dfm %>% group_by(type) %>% summarize(mean = mean(prev), sd = sd(prev))
plot_mean_prev <- ggplot(mean_prev_df, aes(x = reorder(type, -mean), y = mean)) +
plot_themes+
geom_point() +
geom_errorbar(aes(ymin = mean -sd, ymax = mean + sd)) +
ylab("Mean prevalence") + xlab("") +
ylim(0,.12) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
###############################################
# Prevalence over time, model types ##
###############################################
visit_dates <- reshape(visit_dates, timevar= "visitId", idvar = "subjectId", direction = "wide")
numeric_vis_dates <- data.frame(visit_dates$subjectId, apply(visit_dates[,2:11],2,get_numeric_dates))
names(numeric_vis_dates) <- c("subjectId",paste0("v",c(1:10)))
names(visit_dates) <- c("subjectId",paste0("v",c(1:10)))
dfm_dates <- melt(visit_dates, id.vars = "subjectId")
names(dfm_dates) <- c("subjectId", "visitId","date")
min_date <- min(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
max_date <- max(as.numeric(as.Date(dfm_dates$date)), na.rm=T)
date_seq <- seq(to = max_date, from = min_date, by = .6*365)
df_all <- data.frame()
for ( i in 1:length(HPV_types)){
df <- data.frame(date = date_seq[-1],
Type =HPV_types[i],
prev = get_prev(HPV_types[i], date_seq)
)
df_all <- rbind(df_all,df)
}
df_all <- subset(df_all , df_all$Type %in% Model_types)#paste0("hpv",c(62,84,89,16,51,6)))
df_all$Type <- toupper(df_all$Type)
dates <- as.Date(unique(df_all$date), origin = '1970-1-1')
p <- ggplot(df_all, aes(x = as.Date(date, origin = '1970-1-1'), y = prev, group = Type)) + geom_line(aes(color = Type))
plot_prev <- p + xlab("") +  scale_color_viridis(discrete = TRUE, option = "magma", end = .8) + xlim(dates[1], dates[length(dates) -2 ]) +
scale_y_continuous(limits = c(0, 0.16), breaks = c(0, 0.02, 0.04, 0.06, 0.08,.1,.12,.14,.16)) +
plot_themes +
theme(axis.line.x = element_line(),
axis.line.y = element_line(),
axis.text.x = element_text(angle=45, vjust = 0.5),
legend.text = element_text(size = 7, color = "black"),
legend.title= element_blank(),
legend.position = c(.2,.82), legend.direction = "horizontal", legend.justification = "left") +
labs(x = "", y = "Prevalence")
plot_grid(plot_mean_prev, plot_prev, nrow=2 , align = "h", labels = c("A","B"))
